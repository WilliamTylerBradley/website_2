{
  "hash": "c028e10c357b147a48c6bcc159fa84a7",
  "result": {
    "markdown": "---\ntitle: 'Website Design: Part 2'\ndescription: \"This post continues the work from the previous one.  This code takes the saved data and creates the images.\"\ndate: \"2020-04-17\"\ncategories: [R, Blog]\nimage: \"color_scheme_thumbnail.png\"\nexecute: \n  eval: false\n---\n\n\n<b>NOTE: This post is about the old blog design. The images are not used on this site.</b>\n\nThis post continues the work from the [previous one](https://www.willtybrad.com/posts/2020-04-16-website-design-part-1/).  This code takes the saved data and creates the images.  The first two sections set up the rest of the work.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#----------\n# Libraries\n#----------\nlibrary(here)\nlibrary(ggplot2)\nlibrary(grid)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#-------------\n# Read in data\n#-------------\nfreqs <- read.csv(here::here(\"freqs.csv\"))\nfreqs\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#-------------\n# Color Scheme\n#-------------\nbackground <- \"#263121\"\n\ncol <- c(\n  \"Overall\" = \"#85B258\",\n  \"Data Science\" = \"#CAD3C1\",\n  \"Background\" = background\n)\n\npng(filename = here::here(\"images\", \"color_scheme.png\"))\nop <- par(mar = rep(0, 4))\nplot(0, 0, pch = NA, axes = F,\n     xlab = \"\", ylab = \"\",\n     xlim = c(0, 1), ylim = c(0, 1),\n     asp = 1)\nfor(i in seq_len(length(col))) {\n  rect((i / length(col)) - (1 / length(col)), 0, (i / length(col)), 1,\n       col = col[i], border = background)\n}\npar(op)\ndev.off()\n```\n:::\n\n\n:::: {style=\"display: grid; grid-template-columns: 1fr 1fr; align-items: center; grid-column-gap: 10px; \"}\n::: {}\nThe previous section picks the color scheme for the graphics.  The colors come from the Calathea theme found here.  The color scheme sets a dark green for the background with two lighter greens for the bars.\n\nThe next section creates the image for the background.  Clicking the hamburger button at the top left of this website will show the graphic.\n:::\n::: {}\n![](color_scheme.png)\n:::\n::::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#-------\n# Cover\n#-------\n\n# Flip one set of freqs to get back-to-back\nfreqs[freqs$Source == \"Overall\", ]$Frequency <-\n  -freqs[freqs$Source == \"Overall\", ]$Frequency\n\n# Actual plot\np <- ggplot(freqs, aes(x = rev(Letter), y = Frequency, fill = Source)) +\n  geom_bar(stat = \"identity\", color = background, alpha = .5) +\n  scale_fill_manual(values = col) +\n  # No guides since just for looks\n  guides(fill = FALSE) +\n  # Double y-max limit size so the site's title doesn't block the image\n  scale_y_continuous(expand = c(0, 0), limits = c(-15, 75), breaks = 0) +\n  scale_x_discrete(limits = rev(levels(freqs$Letter))) +\n  coord_flip() +\n  theme(\n    panel.background = element_rect(fill = background),\n    text = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    title = element_blank())\n\n# How to just get the plot\n# http://stackoverflow.com/questions/14313285/ggplot2-theme-with-no-axes-or-grid\ngt <- ggplot_gtable(ggplot_build(p))\nge <- subset(gt$layout, name == \"panel\")\ngrid.draw(gt[ge$t:ge$b, ge$l:ge$r])\n\n# Cover needs to be 1920 x 1080 according to image used on demo site\npng(filename = here::here(\"images\", \"cover.png\"),\n    width = 1920, height = 1080)\ngrid.draw(gt[ge$t:ge$b, ge$l:ge$r])\ndev.off()\n```\n:::\n\n\n![](cover.png)\n\nThe right side of the image is left blank because it is not seen.  The size comes from the demo site documentation.  As a standard Hugo/blogdown site using the Tranquilpeak theme, the cover image is set in the config.toml file as `coverImage = \"images/website/cover.png\"`.\n\nFinally, the next section creates the icon that appears on the tab on the home page.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#-----------\n# Icon\n#-----------\n# Undo \"Flip one set of freqs to get back-to-back\"\nfreqs[freqs$Source == \"Overall\", ]$Frequency <-\n  -freqs[freqs$Source == \"Overall\", ]$Frequency\n\n# reset plot\nplot(0, 0,\n     pch = NA, axes = F,\n     xlab = \"\", ylab = \"\",\n     xlim = c(0, 1), ylim = c(0, 1))\n\n# Just use \"Tyler\"\nfreqs_sub <- freqs[freqs$Letter %in% c(\"t\", \"y\", \"l\", \"e\", \"r\"), ]\n\n# Get in right order\nfreqs_sub$Letter <- factor(freqs_sub$Letter,\n                           levels = c(\"t\", \"y\", \"l\", \"e\", \"r\"))\np <- ggplot(freqs_sub, aes(x = Letter, y = Frequency, fill = Source)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  scale_color_manual(values = col) +\n  scale_fill_manual(values = col) +\n  geom_hline(yintercept = 0, color = background) +\n  # No guides since just for looks\n  guides(fill = FALSE) +\n  # Double y-max limit size so the site's title doesn't block the image\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 15), breaks = 0) +\n  theme(\n    # transparent background, so it matches any background\n    panel.background = element_rect(fill = \"transparent\", color = NA),\n    text = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    title = element_blank(),\n    axis.line.x = element_line(color = background))\n\n# http://stackoverflow.com/questions/14313285/ggplot2-theme-with-no-axes-or-grid\ngt <- ggplot_gtable(ggplot_build(p))\nge <- subset(gt$layout, name == \"panel\")\ngrid.draw(gt[ge$t:ge$b, ge$l:ge$r])\n\n# Site Icon needs to be 512x512 according to site design\n# transparent background, so it matches any background\npng(filename = here::here(\"images\", \"icon.png\"),\n    width = 512,\n    height = 512,\n    bg = \"transparent\")\ngrid.draw(gt[ge$t:ge$b, ge$l:ge$r])\ndev.off()\n```\n:::\n\n\n![](icon.png)\n\nThe background is transparent so that it doesnâ€™t appear out of place when moved.  The bars come from the same data as the background but only using the letters of my name.  The  config.toml setting is `favicon = \"images/website/icon.png\"`.  The source code file resides [here](https://github.com/WilliamTylerBradley/site_design/blob/master/make_images.R).",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}